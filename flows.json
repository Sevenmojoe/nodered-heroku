[
    {
        "id": "5a8d1466c759545d",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bd456e4e.359d8",
        "type": "ui_form",
        "z": "5a8d1466c759545d",
        "name": "Dashboard Sign-In",
        "label": "",
        "group": "b82da486.9fc8d8",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "ea809461.f36198",
                "a926c1ff.ede37",
                "6cabb33.95cd54c"
            ]
        ]
    },
    {
        "id": "6603f3ab.d89abc",
        "type": "debug",
        "z": "5a8d1466c759545d",
        "name": "Debug Account Log ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 778.0000915527344,
        "y": 121.00000762939453,
        "wires": []
    },
    {
        "id": "bc6dfbc9.d9d138",
        "type": "comment",
        "z": "5a8d1466c759545d",
        "name": "Sign-In Section",
        "info": "",
        "x": 210.00000762939453,
        "y": 102.99999618530273,
        "wires": []
    },
    {
        "id": "ea809461.f36198",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Account Log",
        "func": "var accountlog =  flow.get(\"accountlog\") || [] ; \n\naccountlog.push({ accessAt : new Date(), username : msg.payload.username})\n\nflow.set(\"accountlog\", accountlog);\n\nmsg.payload = accountlog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 409.00000762939453,
        "y": 129.99999618530273,
        "wires": [
            [
                "6603f3ab.d89abc"
            ]
        ]
    },
    {
        "id": "a926c1ff.ede37",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Account Verification",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"jose\", password : \"12345678\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nmsg.payload = 1;\n\naccounts.forEach(function ( account ){\n    if ( account.username == username ) {\n       msg.payload = 2;\n       if ( account.password == password ) {\n           msg.payload = 0;\n       } \n    }\n});\n\nif ( msg.payload == 0 ) {\n  var currentsocketid = flow.get(\"clientid\") || undefined;\n  if ( currentsocketid !== undefined && currentsocketid !== msg.socketid ) msg.payload = 3;\n}\n// keep the original socketid from msg.socketid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 422.0000457763672,
        "y": 175.0000057220459,
        "wires": [
            [
                "88afc196.8abc2"
            ]
        ]
    },
    {
        "id": "88afc196.8abc2",
        "type": "switch",
        "z": "5a8d1466c759545d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 591.0000419616699,
        "y": 205.9999885559082,
        "wires": [
            [
                "eefb7b9e.f5daa8"
            ],
            [
                "2f57eca.40fa214"
            ],
            [
                "cc34d440.a91948"
            ],
            [
                "126fd334.ed13ed"
            ]
        ]
    },
    {
        "id": "eefb7b9e.f5daa8",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\nflow.set(\"clientid\", msg.socketid);\n/* ui-control payload */\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Another_History\"],\n    hide : [\"Dashboard_Signin\"]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760.999885559082,
        "y": 161.99999809265137,
        "wires": [
            [
                "5c0b7126.396e8"
            ]
        ]
    },
    {
        "id": "2f57eca.40fa214",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Username Doesn't exist!!!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 781.9998931884766,
        "y": 199,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "cc34d440.a91948",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Password\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 782.9999618530273,
        "y": 236.0000123977661,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "5c0b7126.396e8",
        "type": "ui_ui_control",
        "z": "5a8d1466c759545d",
        "name": "Go to Sensor/History Group",
        "x": 1048.0000686645508,
        "y": 161.9999942779541,
        "wires": [
            []
        ]
    },
    {
        "id": "61e843e4.4d74cc",
        "type": "ui_toast",
        "z": "5a8d1466c759545d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 1047.9999732971191,
        "y": 219,
        "wires": [
            []
        ]
    },
    {
        "id": "d60f3dd8.0214b",
        "type": "comment",
        "z": "5a8d1466c759545d",
        "name": "Session Management - 15 secs for this demo",
        "info": "",
        "x": 289.5,
        "y": 319.00000762939453,
        "wires": []
    },
    {
        "id": "643a01a8.560ea",
        "type": "inject",
        "z": "5a8d1466c759545d",
        "name": "Timer",
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 198.00000762939453,
        "y": 407.99999237060547,
        "wires": [
            [
                "bc828c1d.b3504",
                "f6900b2.d3e9ef8"
            ]
        ]
    },
    {
        "id": "bc828c1d.b3504",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = 15000; //15 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 386.00003814697266,
        "y": 374.00000762939453,
        "wires": [
            [
                "50a18f10.e23c2"
            ]
        ]
    },
    {
        "id": "50a18f10.e23c2",
        "type": "switch",
        "z": "5a8d1466c759545d",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 556.000072479248,
        "y": 372.00000762939453,
        "wires": [
            [
                "5b39c16e.da2f"
            ],
            [
                "91c7a0ab.ec163"
            ],
            [
                "71d9aa2e.665fd4"
            ]
        ]
    },
    {
        "id": "5b39c16e.da2f",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 711.9999847412109,
        "y": 345.0000114440918,
        "wires": [
            [
                "d29000e.556e5",
                "a3d5d44d.a71ce8"
            ]
        ]
    },
    {
        "id": "d29000e.556e5",
        "type": "ui_toast",
        "z": "5a8d1466c759545d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 899.500114440918,
        "y": 311.0000114440918,
        "wires": [
            []
        ]
    },
    {
        "id": "8859efbd.09b1b",
        "type": "ui_ui_control",
        "z": "5a8d1466c759545d",
        "name": "Go to Signin Group",
        "x": 1106.5000324249268,
        "y": 346.99999618530273,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d5d44d.a71ce8",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Sign-In Redirection",
        "func": "var msg = {};\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \n            \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\n\nflow.set(\"clientid\", undefined);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 910.0000228881836,
        "y": 348.00000762939453,
        "wires": [
            [
                "8859efbd.09b1b"
            ]
        ]
    },
    {
        "id": "de95afea.546e3",
        "type": "ui_toast",
        "z": "5a8d1466c759545d",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 719.7222023010254,
        "y": 461.99999237060547,
        "wires": []
    },
    {
        "id": "4da58462.7ddd1c",
        "type": "comment",
        "z": "5a8d1466c759545d",
        "name": "Sensor Data Collection",
        "info": "",
        "x": 229.00000762939453,
        "y": 504.00000190734863,
        "wires": []
    },
    {
        "id": "937e9201.0a617",
        "type": "inject",
        "z": "5a8d1466c759545d",
        "name": "Timer",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 201.5,
        "y": 581.0000095367432,
        "wires": [
            [
                "ab530393.261bd"
            ]
        ]
    },
    {
        "id": "c4e61034.b5ec2",
        "type": "comment",
        "z": "5a8d1466c759545d",
        "name": "MQTT ? CoAP?",
        "info": "Expecting data from the actaul sensors.",
        "x": 376.50000762939453,
        "y": 540.9999942779541,
        "wires": []
    },
    {
        "id": "f6900b2.d3e9ef8",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((15000 - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 ) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\n\nmsg.socketid = flow.get(\"clientid\") || \"B1234\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 436.0000305175781,
        "y": 462.00002002716064,
        "wires": [
            [
                "de95afea.546e3"
            ]
        ]
    },
    {
        "id": "6d52854e.4e8d8c",
        "type": "ui_text",
        "z": "5a8d1466c759545d",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Label Display",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1100.4999923706055,
        "y": 667.0001277923584,
        "wires": []
    },
    {
        "id": "ab530393.261bd",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Decode MySensor Message",
        "func": "\nvar mySensorsMessage = {}\nvar newPayload = {};\nvar timestamp = new Date();\n\nnewPayload.nodeId  =  3;\nnewPayload.type =  Math.floor( Math.random() * Math.floor(2));  // 0 or 1\nif ( newPayload.type === 0 /* temperature */ ) newPayload.value   =  Math.floor( Math.random() * Math.floor(30)) + 10; // 10 - 39\nelse newPayload.value   =  Math.floor( Math.random() * Math.floor(40)) + 40; // 40 - 79\n\nmsg.payload = newPayload; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 397.50000762939453,
        "y": 582.0000171661377,
        "wires": [
            [
                "1e3effb1.5ff58",
                "d320c244.f24af"
            ]
        ]
    },
    {
        "id": "1e3effb1.5ff58",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Filter : temperature",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 0) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Temperature\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 614.5000534057617,
        "y": 538.0000200271606,
        "wires": [
            [
                "ef7cf0b4.332f5",
                "38045480.64ec1c",
                "328b09bd.9901c6",
                "4381200b.380d3"
            ]
        ]
    },
    {
        "id": "ef7cf0b4.332f5",
        "type": "ui_gauge",
        "z": "5a8d1466c759545d",
        "name": "Gauge : Temperature",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature DHT22",
        "label": "MySensors v2",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "colors": [
            "#66ccff",
            "#ff8000",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 864.5000076293945,
        "y": 523.9999828338623,
        "wires": []
    },
    {
        "id": "d320c244.f24af",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Filter : humidity",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 1) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Humidity\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 600.5001068115234,
        "y": 645.0000591278076,
        "wires": [
            [
                "d4eaedd1.98978",
                "38045480.64ec1c",
                "328b09bd.9901c6"
            ]
        ]
    },
    {
        "id": "d4eaedd1.98978",
        "type": "ui_gauge",
        "z": "5a8d1466c759545d",
        "name": "Gauge : Humidity",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Humidity DHT22",
        "label": "MySensors v2",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#1a25ab",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 856.500072479248,
        "y": 561.0000286102295,
        "wires": []
    },
    {
        "id": "38045480.64ec1c",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Attention : temperature & humidity",
        "func": "context.data = context.data || new Object();\n\nswitch (msg.topic) {\n    case \"Temperature\":\n        context.data.temperature = msg.payload;\n        msg = null;\n        break;\n    case \"Humidity\":\n        context.data.humidity = msg.payload;\n        msg = null;\n        break;\n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.temperature !== null && context.data.humidity !== null && context.data.temperature !== undefined && context.data.humidity !== undefined) {\n\tmsgOut = \"\"; //new Object();\n    msgOut = \"Temerature : \" \n    msgOut += context.data.temperature.toString(); \n    msgOut+= \"°C - Humidity : \"; \n    msgOut+= context.data.humidity.toString();\n    msgOut+= \"%\";\n    context.data=null;\n    var msg = {};\n    msg.payload = msgOut;\n\treturn msg;\n} \n//else return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 860.4999923706055,
        "y": 668.0000877380371,
        "wires": [
            [
                "6d52854e.4e8d8c"
            ]
        ]
    },
    {
        "id": "328b09bd.9901c6",
        "type": "ui_chart",
        "z": "5a8d1466c759545d",
        "name": "History : Temperature & Humidity",
        "group": "4de9506d.e7364",
        "order": 1,
        "width": "6",
        "height": "9",
        "label": "Temperature & Humidity",
        "chartType": "line",
        "legend": "true",
        "xformat": "%H:%M",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "80",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 907.5000305175781,
        "y": 599.0001049041748,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f6f225f9.0408b8",
        "type": "ui_ui_control",
        "z": "5a8d1466c759545d",
        "name": "Stay in Sensor Group",
        "x": 1056.500099182129,
        "y": 386.0000057220459,
        "wires": [
            []
        ]
    },
    {
        "id": "91c7a0ab.ec163",
        "type": "function",
        "z": "5a8d1466c759545d",
        "name": "Sensor/History Goup",
        "func": "var msg = {};\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    hide : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "
